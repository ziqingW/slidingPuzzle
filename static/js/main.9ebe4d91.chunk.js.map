{"version":3,"sources":["components/Puzzle.js","components/Main.js","App.js","serviceWorker.js","index.js","static/back.jpg"],"names":["shuffle","j","i","tiles","length","_ref","Math","floor","random","push","Puzzle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clickable","blankTile","compare","arr1","arr2","every","num","moveTile","tile","workingTemp","assign","state","win","_ref2","blank","setState","shuffleTiles","replay","_this2","classes","clickableTiles","react_default","a","createElement","index_es","container","direction","justify","alignItems","className","greeting","repeat","variant","color","onClick","puzzleWrapper","map","item","xs","key","includes","button","Component","withStyles","maxWidth","border","borderRadius","&:hover","cursor","filter","textShadow","height","width","fontSize","fontWeight","boxShadow","backgroundColor","marginTop","styles","frame","backgroundImage","concat","backImage","backgroundPosition","backgroundRepeat","backgroundSize","title","fontFamily","puzzle","minHeight","Main","spacing","components_Puzzle","App","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9ebe4d91.chunk.js","sourcesContent":["import React , {Component} from 'react'\nimport {Grid, withStyles, Button} from '@material-ui/core'\n\nconst shuffle = () => {\n  let tiles = [1,2,3,4,5,6,7,8];\n  let j, i;\n  for (i = tiles.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      [tiles[i], tiles[j]] = [tiles[j], tiles[i]]\n  }\n  tiles.push(null)\n  return tiles\n}\n\nconst styles = {\n  puzzleWrapper: {\n    maxWidth : \"250px\",\n    border: \"8px solid rgba(255,255,255,0.8)\",\n    borderRadius: \"8px\",\n  },\n  tiles: {\n    '&:hover': {\n      cursor: \"pointer\",\n      filter: \"brightness(120%)\",\n      textShadow: \"1px 1px 3px gold\",\n    },\n    height: \"80px\",\n    width: \"80px\",\n    border: \"1px solid black\",\n    fontSize: \"1.8em\",\n    fontWeight: \"bold\",\n    boxShadow: \"1px 1px 1px black\",\n    backgroundColor: \"rgba(131, 106, 242,0.7)\",\n    color: \"white\",\n    textShadow: \"1px 1px 1px black\",\n\n  },\n  blank: {\n    backgroundColor: \"rgba(145,145,145,0.7)\",\n  },\n  button: {\n    marginTop: '100px',\n  },\n  greeting: {\n    textShadow: \"1px 1px 3px white\",\n  },\n  repeat: {\n    color: \"rgba(229, 53, 50, 0.8)\",\n    textShadow: \"1px 1px 1px white\",\n  }\n}\n\nclass Puzzle extends Component {\n  constructor(props) {\n    super(props)\n    const tiles = shuffle();\n    this.state = {\n      tiles : tiles,\n      blank : 8,\n      win : false,\n    }\n  }\n\n  clickable = blankTile => {\n    switch (blankTile) {\n      case 0:\n        return [1,3]\n      case 1:\n        return [0,2,4]\n      case 2:\n        return [1,5]\n      case 3:\n        return [0,4,6]\n      case 4:\n        return [1,3,5,7]\n      case 5:\n        return [2,4,8]\n      case 6:\n        return [3,7]\n      case 7:\n        return [4,6,8]\n      case 8:\n        return [5,7]\n      default:\n        break\n    }\n  }\n\n  compare = (arr1, arr2) => {\n      return (arr1.length === arr2.length) &&\n      arr1.every((num,i) => {\n        return num === arr2[i]\n      })\n  }\n\n  moveTile = tile => {\n    let workingTemp = Object.assign([], this.state.tiles);\n    let win = false;\n    [workingTemp[tile], workingTemp[this.state.blank]] = [workingTemp[this.state.blank], workingTemp[tile]]\n    // let workingTemp = [1,2,3,4,5,6,7,8,null];\n    if (this.compare(workingTemp, [1,2,3,4,5,6,7,8,null])) {\n      win = true\n    }\n    this.setState({\n      tiles: workingTemp,\n      blank: tile,\n      win: win,\n    })\n  }\n\n  shuffleTiles = () => {\n    const tiles = shuffle();\n    this.setState({\n      tiles : tiles,\n      blank: 8,\n      win: false\n    })\n  }\n\n  replay = () => {\n    const tiles = shuffle();\n    this.setState({\n      tiles : tiles,\n      blank : 8,\n      win : false,\n    })\n  }\n\n  render() {\n    const {classes} = this.props\n    const clickableTiles = this.clickable(this.state.blank)\n    return(\n       this.state.win ? (\n         <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n          <h2 className={classes.greeting}><i>Congratulations, you Win!</i></h2>\n          <h2 className={classes.repeat}><i>Play one more?</i></h2>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.replay}>\n            Yeah!\n          </Button>\n        </Grid>) : (\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid container direction=\"row\" justify=\"center\" className={classes.puzzleWrapper}>\n          {this.state.tiles.map((tile,i)=>(\n            <Grid container justify=\"center\" alignItems=\"center\" className={this.state.blank === i ? (classes.blank + ' ' + classes.tiles): classes.tiles} item xs={4} key={i} onClick={clickableTiles.includes(i)? (()=> this.moveTile(i)) : (()=>null)}>{tile}</Grid>\n          ))}\n        </Grid>\n      <Grid className={classes.button}>\n        <Button variant=\"contained\" color=\"secondary\" onClick={this.shuffleTiles}>\n          Shuffle\n        </Button>\n      </Grid>\n      </Grid>\n    ))\n  }\n}\n\nPuzzle = withStyles(styles)(Puzzle)\nexport default Puzzle\n","import React from 'react'\nimport {Grid, withStyles, Typography} from '@material-ui/core'\nimport Puzzle from './Puzzle'\nimport backImage from '../static/back.jpg'\n\nconst styles = {\n  frame : {\n    backgroundImage: `url(${backImage})`,\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n  },\n  title: {\n    marginTop: \"100px\",\n    fontFamily: \"Lobster\"\n  },\n  puzzle: {\n    minHeight: \"100vh\",\n    marginTop: \"100px\",\n  },\n}\n\nlet Main = props =>  {\n    const {classes} = props\n    return (\n      <Grid container className={classes.frame}>\n        <Grid container direction=\"row\" justify=\"center\">\n\n          <Typography variant=\"h4\" className={classes.title}>Sliding Puzzle</Typography>\n\n        </Grid>\n        <Grid container spacing={0} direction=\"column\" alignItems=\"center\" className={classes.puzzle}>\n          <Puzzle />\n        </Grid>\n      </Grid>\n    )\n  }\n\n\nMain = withStyles(styles)(Main)\nexport default Main\n","import React, { Component } from 'react';\nimport Main from './components/Main'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Main />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/back.2c56f86b.jpg\";"],"sourceRoot":""}